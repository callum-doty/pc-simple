"""Add taxonomy_term_id to document_taxonomy_map if not exists
Revision ID: 65d45777a561
Revises: 183fbe27b9bb
Create Date: 2025-08-05 17:23:29.998193
"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine import reflection


# revision identifiers, used by Alembic.
revision: str = "65d45777a561"
down_revision: Union[str, None] = "183fbe27b9bb"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def column_exists(table_name, column_name):
    bind = op.get_bind()
    if bind is None:
        return False
    inspector = reflection.Inspector.from_engine(bind)
    columns = [c["name"] for c in inspector.get_columns(table_name)]
    return column_name in columns


def constraint_exists(table_name, constraint_name):
    bind = op.get_bind()
    if bind is None:
        return False
    inspector = reflection.Inspector.from_engine(bind)
    foreign_keys = inspector.get_foreign_keys(table_name)
    for fk in foreign_keys:
        if fk.get("name") == constraint_name:
            return True
    return False


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    if not column_exists("document_taxonomy_map", "taxonomy_term_id"):
        op.add_column(
            "document_taxonomy_map",
            sa.Column("taxonomy_term_id", sa.Integer(), nullable=False),
        )
        op.create_foreign_key(
            "fk_document_taxonomy_map_taxonomy_term_id",
            "document_taxonomy_map",
            "taxonomy_terms",
            ["taxonomy_term_id"],
            ["id"],
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    if constraint_exists(
        "document_taxonomy_map", "fk_document_taxonomy_map_taxonomy_term_id"
    ):
        op.drop_constraint(
            "fk_document_taxonomy_map_taxonomy_term_id",
            "document_taxonomy_map",
            type_="foreignkey",
        )
    if column_exists("document_taxonomy_map", "taxonomy_term_id"):
        op.drop_column("document_taxonomy_map", "taxonomy_term_id")
    # ### end Alembic commands ###
