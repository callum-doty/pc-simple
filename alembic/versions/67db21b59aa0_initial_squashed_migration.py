"""Initial squashed migration

Revision ID: 67db21b59aa0
Revises:
Create Date: 2025-08-08 13:00:00.000000

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from pgvector.sqlalchemy import Vector

# revision identifiers, used by Alembic.
revision = "67db21b59aa0"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "documents",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("filename", sa.String(length=255), nullable=False),
        sa.Column("file_path", sa.String(length=500), nullable=False),
        sa.Column("file_size", sa.Integer(), nullable=False),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column("processing_progress", sa.Integer(), nullable=True),
        sa.Column("processing_error", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("processed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("extracted_text", sa.Text(), nullable=True),
        sa.Column(
            "ai_analysis", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("keywords", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "file_metadata", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("search_content", sa.Text(), nullable=True),
        sa.Column("search_vector", Vector(dim=1536), nullable=True),
        sa.Column(
            "ts_vector",
            postgresql.TSVECTOR(),
            sa.Computed(
                "to_tsvector('english', coalesce(filename, '') || ' ' || coalesce(extracted_text, ''))",
                persisted=True,
            ),
            nullable=True,
        ),
        sa.Column("preview_url", sa.String(length=500), nullable=True),
        sa.Column("thumbnail_url", sa.String(length=500), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_documents_created_at"), "documents", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_documents_filename"), "documents", ["filename"], unique=False
    )
    op.create_index(op.f("ix_documents_id"), "documents", ["id"], unique=False)
    op.create_index(
        op.f("ix_documents_keywords"),
        "documents",
        ["keywords"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(op.f("ix_documents_status"), "documents", ["status"], unique=False)
    op.create_index(
        "idx_documents_search_vector",
        "documents",
        ["search_vector"],
        unique=False,
        postgresql_using="hnsw",
        postgresql_with={"m": 16, "ef_construction": 64},
        postgresql_ops={"search_vector": "vector_cosine_ops"},
    )
    op.create_index(
        "idx_documents_ts_vector",
        "documents",
        ["ts_vector"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_table(
        "search_queries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("query", sa.String(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("user_id", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_search_queries_id"), "search_queries", ["id"], unique=False
    )
    op.create_table(
        "taxonomy_terms",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("term", sa.String(length=255), nullable=False),
        sa.Column("primary_category", sa.String(length=255), nullable=False),
        sa.Column("subcategory", sa.String(length=255), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["taxonomy_terms.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_taxonomy_terms_id"), "taxonomy_terms", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_taxonomy_terms_primary_category"),
        "taxonomy_terms",
        ["primary_category"],
        unique=False,
    )
    op.create_index(
        op.f("ix_taxonomy_terms_subcategory"),
        "taxonomy_terms",
        ["subcategory"],
        unique=False,
    )
    op.create_index(
        op.f("ix_taxonomy_terms_term"), "taxonomy_terms", ["term"], unique=False
    )
    op.create_table(
        "document_taxonomy_map",
        sa.Column("document_id", sa.Integer(), nullable=False),
        sa.Column("taxonomy_term_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["documents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["taxonomy_term_id"],
            ["taxonomy_terms.id"],
        ),
        sa.PrimaryKeyConstraint("document_id", "taxonomy_term_id"),
    )
    op.create_table(
        "taxonomy_synonyms",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("taxonomy_id", sa.Integer(), nullable=False),
        sa.Column("synonym", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["taxonomy_id"],
            ["taxonomy_terms.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_taxonomy_synonyms_id"), "taxonomy_synonyms", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_taxonomy_synonyms_synonym"),
        "taxonomy_synonyms",
        ["synonym"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_taxonomy_synonyms_synonym"), table_name="taxonomy_synonyms")
    op.drop_index(op.f("ix_taxonomy_synonyms_id"), table_name="taxonomy_synonyms")
    op.drop_table("taxonomy_synonyms")
    op.drop_table("document_taxonomy_map")
    op.drop_index(op.f("ix_taxonomy_terms_term"), table_name="taxonomy_terms")
    op.drop_index(op.f("ix_taxonomy_terms_subcategory"), table_name="taxonomy_terms")
    op.drop_index(
        op.f("ix_taxonomy_terms_primary_category"), table_name="taxonomy_terms"
    )
    op.drop_index(op.f("ix_taxonomy_terms_id"), table_name="taxonomy_terms")
    op.drop_table("taxonomy_terms")
    op.drop_index(op.f("ix_search_queries_id"), table_name="search_queries")
    op.drop_table("search_queries")
    op.drop_index("idx_documents_ts_vector", table_name="documents")
    op.drop_index("idx_documents_search_vector", table_name="documents")
    op.drop_index(op.f("ix_documents_status"), table_name="documents")
    op.drop_index(op.f("ix_documents_keywords"), table_name="documents")
    op.drop_index(op.f("ix_documents_id"), table_name="documents")
    op.drop_index(op.f("ix_documents_filename"), table_name="documents")
    op.drop_index(op.f("ix_documents_created_at"), table_name="documents")
    op.drop_table("documents")
    # ### end Alembic commands ###
